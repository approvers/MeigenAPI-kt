plugins {
    id "application"
    id "com.github.johnrengelman.shadow" version "6.1.0"

    id "org.jetbrains.kotlin.jvm" version "1.4.32"
    id "org.jetbrains.kotlin.plugin.serialization" version "1.4.32"

    id "com.google.protobuf" version "0.8.16"

    id "com.ncorti.ktfmt.gradle" version "0.5.0"

    id "io.gitlab.arturbosch.detekt" version "1.16.0"
}

group "org.example"
version "1.0-SNAPSHOT"

sourceCompatibility = 11
targetCompatibility = 11

compileKotlin {
    kotlinOptions {
        jvmTarget = 11
    }
}

repositories {
    mavenCentral()
    google()

    jcenter {
        content {
            includeModule("org.jetbrains.kotlinx", "kotlinx-html-jvm")
        }
    }
}

ext {
    ktor_version = "1.5.2"
    logback_version = "1.2.3"
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"

    detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:1.16.0"

    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "io.ktor:ktor-serialization:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"

    implementation "com.github.excitement-engineer:ktor-graphql:2.1.0"
    implementation "com.expediagroup:graphql-kotlin-spring-server:4.0.0-alpha.17"

    implementation "io.grpc:grpc-kotlin-stub:1.0.0"

    implementation "org.litote.kmongo:kmongo-coroutine:4.2.5"

    testImplementation "io.ktor:ktor-server-tests:$ktor_version"
}

sourceSets {
    main {
        proto {
            srcDir "src/main/kotlin/drivers/grpc"
        }
    }
}

application {
    mainClassName = "MainKt"
}

detekt {
    buildUponDefaultConfig = true
    autoCorrect = true
}

ktfmt {
    kotlinLangStyle()
}

jar {
    manifest {
        attributes "Main-Class": "MainKt"
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.15.8"
    }

    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.37.0"
        }

        grpckt {
            artifact = "io.grpc:protoc-gen-grpc-kotlin:1.0.0:jdk7@jar"
        }
    }

    generateProtoTasks {
        all().each { task ->
            task.plugins {
                grpc { }
                grpckt { }
            }
        }
    }
}
